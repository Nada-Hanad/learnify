{"version":3,"sources":["Components/appBar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","menuItems","classes","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","position","Toolbar","IconButton","ref","undefined","onClick","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","map","item","Typography","variant","App","menu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAcMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,EAAT,GAAsC,IAAdC,EAAa,EAAbA,UAC/BC,EAAUX,IAChB,EAAwBY,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAYJ,IAAMK,OAAO,MAMzBC,EAAc,SAACC,GACfH,EAAUI,SAAWJ,EAAUI,QAAQC,SAASF,EAAMG,SAI1DP,GAAQ,IAGV,SAASQ,EAAkBJ,GACP,QAAdA,EAAMK,MACRL,EAAMM,iBACNV,GAAQ,IAKZ,IAAMW,EAAWd,IAAMK,OAAOH,GAS9B,OARAF,IAAMe,WAAU,YACW,IAArBD,EAASN,UAA6B,IAATN,GAC/BE,EAAUI,QAAQQ,QAGpBF,EAASN,QAAUN,IAClB,CAACA,IAGF,qBAAKe,UAAWlB,EAAQR,KAAxB,SACE,qBAAK0B,UAAU,QAAf,SACE,qBAAKC,SAAS,SAAd,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,IAAKjB,EACL,gBAAeF,EAAO,sBAAmBoB,EACzC,gBAAc,OACdC,QAtCS,WACnBpB,GAAQ,SAACW,GAAD,OAAeA,MAiCf,SAME,cAAC,IAAD,MAEF,cAACU,EAAA,EAAD,CACEtB,KAAMA,EACNuB,SAAUrB,EAAUI,QACpBkB,UAAMJ,EACNK,YAAU,EACVC,eAAa,EALf,SAOG,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,cAACC,EAAA,EAAD,2BACMF,GADN,IAEEG,MAAO,CACLC,gBACgB,WAAdH,EAAyB,aAAe,iBAJ9C,SAOE,cAACI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBC,YAAa9B,EAAhC,SACE,sBAAKW,UAAU,WAAf,UACG,IACD,cAACoB,EAAA,EAAD,CACEC,cAAepC,EACfqC,GAAG,iBACHC,UAAW7B,EAHb,SAKGb,EAAU2C,KAAI,SAACC,GACd,OACE,eAAC,IAAD,WACG,IACD,qBAAKzB,UAAU,QAAf,SACE,oBAAIM,QAASjB,EAAb,SACE,6BAAKoC,6BAa7B,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK3B,UAAWlB,EAAQH,MAA5C,+BChGGiD,MAhBf,WACE,MAAwB5C,mBAAS,CAC/B,UACA,qBACA,+BACA,iBACA,aALF,mBAAO6C,EAAP,KAQA,OARA,KASE,qBAAK7B,UAAU,MAAf,SACE,cAACpB,EAAD,CAAcC,UAAWgD,OCHhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06662b8d.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport FadeIn from \"react-fade-in\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar({ menuItems }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div className=\"myBar\">\n        <nav position=\"static\">\n          <Toolbar>\n            <IconButton\n              ref={anchorRef}\n              aria-controls={open ? \"menu-list-grow\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleToggle}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Popper\n              open={open}\n              anchorEl={anchorRef.current}\n              role={undefined}\n              transition\n              disablePortal\n            >\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{\n                    transformOrigin:\n                      placement === \"bottom\" ? \"center top\" : \"center bottom\",\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <div className=\"menuList\">\n                        {\" \"}\n                        <MenuList\n                          autoFocusItem={open}\n                          id=\"menu-list-grow\"\n                          onKeyDown={handleListKeyDown}\n                        >\n                          {menuItems.map((item) => {\n                            return (\n                              <FadeIn>\n                                {\" \"}\n                                <div className=\"mItem\">\n                                  <li onClick={handleClose}>\n                                    <h5>{item}</h5>\n                                  </li>\n                                </div>\n                              </FadeIn>\n                            );\n                          })}\n                        </MenuList>\n                      </div>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n            <Typography variant=\"h6\" className={classes.title}>\n              Learnify\n            </Typography>\n          </Toolbar>\n        </nav>\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport ButtonAppBar from \"./Components/appBar\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [menu, setmenu] = useState([\n    \"Acceuil\",\n    \"Description du jeu\",\n    \"Lien et guide d'installation\",\n    \"Comment jouer?\",\n    \"A propos\",\n  ]);\n\n  return (\n    <div className=\"App\">\n      <ButtonAppBar menuItems={menu}></ButtonAppBar>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}